package port;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.PrintStream;
import java.io.Serializable;
import java.util.Scanner;

public class FisModel implements Serializable {

	private static final long serialVersionUID = 1L;

	private String mFisContent = "";
	private String mHfpContent = "";
	private String mVertexContent = "";
	private String mFisFunc;

	public FisModel(File fis, String fisFunc) {

		mFisFunc = fisFunc;
		try {
			Scanner s = new Scanner(fis);
			String tmp = "";
			while (s.hasNextLine()) {
				tmp += s.nextLine() + "\n";
			}
			s.close();
			mFisContent = tmp;
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}
	}

	/**
	 * Save the hfp congfig file
	 */
	public void setHfp(File hfp) {

		try {
			Scanner s = new Scanner(hfp);
			String tmp = "";
			while (s.hasNextLine()) {
				tmp += s.nextLine() + "\n";
			}
			s.close();
			mHfpContent = tmp;
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}
	}

	/**
	 * Save the vertex file
	 */
	public void setVertex(File vertex) {

		try {
			Scanner s = new Scanner(vertex);
			String tmp = "";
			while (s.hasNextLine()) {
				tmp += s.nextLine() + "\n";
			}
			s.close();
			mVertexContent = tmp;
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}
	}

	/**
	 * Return the fis model file
	 * 
	 * @param path
	 *            the directory where the file will be created
	 * 
	 * @return fis model file
	 */
	public File getFis(String path) {

		File fis = new File(path);
		try {
			FileOutputStream data = new FileOutputStream(fis);
			PrintStream write = new PrintStream(data);
			write.print(mFisContent);
			write.close();
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}
		return fis;
	}

	/**
	 * Return the hfp config file
	 * 
	 * @param path
	 *            the directory where the file will be created
	 * 
	 * @return hfp config file
	 */
	public File getHfp(String path) {

		if (mHfpContent == "")
			return null;
		File hfp = new File(path);
		try {
			FileOutputStream data = new FileOutputStream(hfp);
			PrintStream write = new PrintStream(data);
			write.print(mHfpContent);
			write.close();
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}
		return hfp;
	}

	/**
	 * Return the vertex file
	 * 
	 * @param path
	 *            the directory where the file will be created
	 * 
	 * @return vertex file
	 */
	public File getVertex(String path) {

		if (mVertexContent == "")
			return null;
		File vert = new File(path);
		try {
			FileOutputStream data = new FileOutputStream(vert);
			PrintStream write = new PrintStream(data);
			write.print(mVertexContent);
			write.close();
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}
		return vert;
	}

	/**
	 * Get the model's summary
	 * 
	 * @return string rapresenting model's summary
	 */
	public String getSum() {
		return "Fis Model generated by: " + mFisFunc;
	}

}
